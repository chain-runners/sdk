/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChainRunnersOffChainDNARenderer,
  ChainRunnersOffChainDNARendererInterface,
} from "../ChainRunnersOffChainDNARenderer";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_defaultURIPrefix",
        type: "string",
      },
      {
        internalType: "address",
        name: "_provenanceContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_onChainRendererAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "onChainRenderer",
    outputs: [
      {
        internalType: "contract IChainRunnersRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "onChainTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "provenanceContract",
    outputs: [
      {
        internalType: "contract IChainRunners",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "prefix",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_onChainRendererAddress",
        type: "address",
      },
    ],
    name: "setOnChainRenderer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "dna",
            type: "uint256",
          },
        ],
        internalType: "struct ChainRunnersTypes.ChainRunner",
        name: "runnerData",
        type: "tuple",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010d6380380620010d683398101604081905262000034916200020b565b6200003f3362000092565b60018055600380546001600160a01b038085166001600160a01b0319928316179092556004805492841692909116919091179055825162000088906002906020860190620000e2565b50505050620003ad565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000f09062000307565b90600052602060002090601f0160209004810192826200011457600085556200015f565b82601f106200012f57805160ff19168380011785556200015f565b828001600101855582156200015f579182015b828111156200015f57825182559160200191906001019062000142565b506200016d92915062000171565b5090565b5b808211156200016d576000815560010162000172565b60006200019f620001998462000295565b62000276565b905082815260208101848484011115620001b857600080fd5b620001c5848285620002d4565b509392505050565b8051620001da8162000393565b92915050565b600082601f830112620001f1578081fd5b81516200020384826020860162000188565b949350505050565b60008060006060848603121562000220578283fd5b838301516001600160401b0381111562000238578384fd5b6200024686828701620001e0565b93505060206200025986828701620001cd565b92505060406200026c86828701620001cd565b9150509250925092565b60006200028260405190565b905062000290828262000338565b919050565b60006001600160401b03821115620002b157620002b16200037d565b601f19601f83011660200192915050565b60006001600160a01b038216620001da565b60005b83811015620002f1578181015183820152602001620002d7565b8381111562000301576000848401525b50505050565b6002810460018216806200031c57607f821691505b6020821081141562000332576200033262000367565b50919050565b601f19601f83011681016001600160401b03811182821017156200036057620003606200037d565b6040525050565b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6200039e81620002c2565b8114620003aa57600080fd5b50565b610d1980620003bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80638da5cb5b11610076578063a19c3d851161005b578063a19c3d851461013a578063a62f8deb1461014d578063f2fde38b1461016057600080fd5b80638da5cb5b1461010e5780639d5052721461012757600080fd5b80631c759f21146100a8578063474f92b8146100d157806355f804b3146100f1578063715018a614610106575b600080fd5b6003546100bb906001600160a01b031681565b6040516100c89190610a05565b60405180910390f35b6100e46100df36600461082e565b610173565b6040516100c89190610a13565b6101046100ff3660046107c4565b6102cb565b005b610104610315565b6000546001600160a01b03166040516100c891906109f7565b6101046101353660046107a7565b61034b565b6004546100bb906001600160a01b031681565b6100e461015b366004610868565b6103af565b61010461016e3660046107a7565b6103f1565b606061018b6040518060200160405280600081525090565b6003546040517f422627c30000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063422627c3906101d4908690600401610abf565b60206040518083038186803b1580156101ec57600080fd5b505afa158015610200573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610224919061084b565b8152600480546040517fa62f8deb0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169163a62f8deb91610270918791869101610acd565b60006040518083038186803b15801561028857600080fd5b505afa15801561029c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102c491908101906107f9565b9392505050565b6000546001600160a01b031633146102fe5760405162461bcd60e51b81526004016102f590610a85565b60405180910390fd5b805161031190600290602084019061060b565b5050565b6000546001600160a01b0316331461033f5760405162461bcd60e51b81526004016102f590610a85565b610349600061044d565b565b6000546001600160a01b031633146103755760405162461bcd60e51b81526004016102f590610a85565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b606060026103bc846104b5565b83516103c7906104b5565b6040516020016103d9939291906109af565b60405160208183030381529060405290505b92915050565b6000546001600160a01b0316331461041b5760405162461bcd60e51b81526004016102f590610a85565b6001600160a01b0381166104415760405162461bcd60e51b81526004016102f590610a24565b61044a8161044d565b50565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060816104f557505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561051f578061050981610c24565b91506105189050600a83610b47565b91506104f9565b60008167ffffffffffffffff81111561054857634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610572576020820181803683370190505b5090505b841561060357610587600183610b5b565b9150610594600a86610c5d565b61059f906030610b2f565b60f81b8183815181106105c257634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506105fc600a86610b47565b9450610576565b949350505050565b82805461061790610bca565b90600052602060002090601f016020900481019282610639576000855561067f565b82601f1061065257805160ff191683800117855561067f565b8280016001018555821561067f579182015b8281111561067f578251825591602001919060010190610664565b5061068b92915061068f565b5090565b5b8082111561068b5760008155600101610690565b60006106b76106b284610b04565b610ae8565b9050828152602081018484840111156106cf57600080fd5b6106da848285610b8e565b509392505050565b60006106f06106b284610b04565b90508281526020810184848401111561070857600080fd5b6106da848285610b9a565b80356103eb81610cc9565b600082601f83011261072e578081fd5b81356106038482602086016106a4565b600082601f83011261074e578081fd5b81516106038482602086016106e2565b60006020828403121561076f578081fd5b6107796020610ae8565b905060006107878484610791565b9082015292915050565b80356103eb81610cdd565b80516103eb81610cdd565b6000602082840312156107b8578081fd5b6102c483828401610713565b6000602082840312156107d5578081fd5b8082013567ffffffffffffffff8111156107ed578182fd5b6106038482850161071e565b60006020828403121561080a578081fd5b8082015167ffffffffffffffff811115610822578182fd5b6106038482850161073e565b60006020828403121561083f578081fd5b6102c483828401610791565b60006020828403121561085c578081fd5b6102c48382840161079c565b6000806040838503121561087a578081fd5b61088684828501610791565b915060206108968582860161075e565b9150509250929050565b6108a981610b72565b82525050565b6108a981610b83565b60006108c2825190565b8084526020840193506108d9818560208601610b9a565b601f01601f19169290920192915050565b60006108f4825190565b610902818560208601610b9a565b9290920192915050565b6000815461091981610bca565b600182168015610930576001811461095f5761098f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083168652818601935061098f565b60008581526020902060005b838110156109875781548882015260019091019060200161096b565b505081860193505b50505092915050565b80516109a483826109a9565b505050565b806108a9565b6109b9818561090c565b90506109c581846108ea565b7f3f646e613d0000000000000000000000000000000000000000000000000000008152600501905061060381836108ea565b602081016103eb82846108a0565b602081016103eb82846108af565b602080825281016102c481846108b8565b602080825281016103eb81602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201527f6464726573730000000000000000000000000000000000000000000000000000604082015260600190565b60208082528181019081527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726040830152606082016103eb565b602081016103eb82846109a9565b60408101610adb82856109a9565b6102c46020830184610998565b6000610af360405190565b9050610aff8282610bf7565b919050565b600067ffffffffffffffff821115610b1e57610b1e610cb3565b601f19601f83011660200192915050565b60008219821115610b4257610b42610c71565b500190565b600082610b5657610b56610c87565b500490565b600082821015610b6d57610b6d610c71565b500390565b60006001600160a01b0382166103eb565b60006103eb82610b72565b82818337506000910152565b60005b83811015610bb5578181015183820152602001610b9d565b83811115610bc4576000848401525b50505050565b600281046001821680610bde57607f821691505b60208210811415610bf157610bf1610c9d565b50919050565b601f19601f830116810181811067ffffffffffffffff82111715610c1d57610c1d610cb3565b6040525050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c5657610c56610c71565b5060010190565b600082610c6c57610c6c610c87565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610cd281610b72565b811461044a57600080fd5b80610cd256fea264697066735822122068ccd98cc01fe0d53592017ff0ff5fda5bb7d879c1c3a445411973b1252fe34964736f6c63430008040033";

export class ChainRunnersOffChainDNARenderer__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _defaultURIPrefix: string,
    _provenanceContractAddress: string,
    _onChainRendererAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChainRunnersOffChainDNARenderer> {
    return super.deploy(
      _defaultURIPrefix,
      _provenanceContractAddress,
      _onChainRendererAddress,
      overrides || {}
    ) as Promise<ChainRunnersOffChainDNARenderer>;
  }
  getDeployTransaction(
    _defaultURIPrefix: string,
    _provenanceContractAddress: string,
    _onChainRendererAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _defaultURIPrefix,
      _provenanceContractAddress,
      _onChainRendererAddress,
      overrides || {}
    );
  }
  attach(address: string): ChainRunnersOffChainDNARenderer {
    return super.attach(address) as ChainRunnersOffChainDNARenderer;
  }
  connect(signer: Signer): ChainRunnersOffChainDNARenderer__factory {
    return super.connect(signer) as ChainRunnersOffChainDNARenderer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainRunnersOffChainDNARendererInterface {
    return new utils.Interface(
      _abi
    ) as ChainRunnersOffChainDNARendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainRunnersOffChainDNARenderer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainRunnersOffChainDNARenderer;
  }
}
