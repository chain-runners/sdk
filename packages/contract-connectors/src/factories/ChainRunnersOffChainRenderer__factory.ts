/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChainRunnersOffChainRenderer,
  ChainRunnersOffChainRendererInterface,
} from "../ChainRunnersOffChainRenderer";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_defaultURIPrefix",
        type: "string",
      },
      {
        internalType: "address",
        name: "_provenanceContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_onChainRendererAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "onChainRenderer",
    outputs: [
      {
        internalType: "contract IChainRunnersRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "onChainTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "provenanceContract",
    outputs: [
      {
        internalType: "contract IChainRunners",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "prefix",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_onChainRendererAddress",
        type: "address",
      },
    ],
    name: "setOnChainRenderer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "dna",
            type: "uint256",
          },
        ],
        internalType: "struct ChainRunnersTypes.ChainRunner",
        name: "",
        type: "tuple",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

export class ChainRunnersOffChainRenderer__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _defaultURIPrefix: string,
    _provenanceContractAddress: string,
    _onChainRendererAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChainRunnersOffChainRenderer> {
    return super.deploy(
      _defaultURIPrefix,
      _provenanceContractAddress,
      _onChainRendererAddress,
      overrides || {}
    ) as Promise<ChainRunnersOffChainRenderer>;
  }
  getDeployTransaction(
    _defaultURIPrefix: string,
    _provenanceContractAddress: string,
    _onChainRendererAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _defaultURIPrefix,
      _provenanceContractAddress,
      _onChainRendererAddress,
      overrides || {}
    );
  }
  attach(address: string): ChainRunnersOffChainRenderer {
    return super.attach(address) as ChainRunnersOffChainRenderer;
  }
  connect(signer: Signer): ChainRunnersOffChainRenderer__factory {
    return super.connect(signer) as ChainRunnersOffChainRenderer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainRunnersOffChainRendererInterface {
    return new utils.Interface(_abi) as ChainRunnersOffChainRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainRunnersOffChainRenderer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainRunnersOffChainRenderer;
  }
}
