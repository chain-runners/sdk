/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721AClaimable,
  ERC721AClaimableInterface,
} from "../ERC721AClaimable";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a6538038062001a65833981016040819052620000349162000189565b81516200004990600490602085019062000073565b5080516200005f90600590602084019062000073565b506127116000555050600560025562000303565b828054620000819062000277565b90600052602060002090601f016020900481019282620000a55760008555620000f0565b82601f10620000c057805160ff1916838001178555620000f0565b82800160010185558215620000f0579182015b82811115620000f0578251825591602001919060010190620000d3565b50620000fe92915062000102565b5090565b5b80821115620000fe576000815560010162000103565b6000620001306200012a8462000217565b620001f8565b9050828152602081018484840111156200014957600080fd5b6200015684828562000244565b509392505050565b600082601f8301126200016f578081fd5b81516200018184826020860162000119565b949350505050565b600080604083850312156200019c578182fd5b828201516001600160401b03811115620001b4578283fd5b620001c2858286016200015e565b602085015190935090506001600160401b03811115620001e0578182fd5b620001ee858286016200015e565b9150509250929050565b60006200020460405190565b9050620002128282620002a8565b919050565b60006001600160401b03821115620002335762000233620002ed565b601f19601f83011660200192915050565b60005b838110156200026157818101518382015260200162000247565b8381111562000271576000848401525b50505050565b6002810460018216806200028c57607f821691505b60208210811415620002a257620002a2620002d7565b50919050565b601f19601f83011681016001600160401b0381118282101715620002d057620002d0620002ed565b6040525050565b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61175280620003136000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde1461021e578063c87b56dd14610231578063d54ad2a114610244578063e985e9c51461024c57600080fd5b806370a08231146101c6578063736bf591146101d957806395d89b4114610203578063a22cb4651461020b57600080fd5b806318160ddd116100d357806318160ddd1461017857806323b872dd1461018d57806342842e0e146101a05780636352211e146101b357600080fd5b806301ffc9a71461010557806306fdde031461012e578063081812fc14610143578063095ea7b314610163575b600080fd5b6101186101133660046113bf565b610288565b60405161012591906114ef565b60405180910390f35b610136610325565b60405161012591906114fd565b6101566101513660046113f9565b6103b7565b604051610125919061149d565b610176610171366004611391565b610414565b005b6101806104f1565b604051610125919061150e565b61017661019b3660046112a2565b61050d565b6101766101ae3660046112a2565b610518565b6101566101c13660046113f9565b610533565b6101806101d436600461124d565b610548565b6000547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd8ef01610180565b6101366105b0565b610176610219366004611363565b6105bf565b61017661022c3660046112ed565b61068f565b61013661023f3660046113f9565b6106f9565b600154610180565b61011861025a36600461126a565b6001600160a01b03918216600090815260096020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806102eb57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061031f57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606004805461033490611606565b80601f016020809104026020016040519081016040528092919081815260200182805461036090611606565b80156103ad5780601f10610382576101008083540402835291602001916103ad565b820191906000526020600020905b81548152906001019060200180831161039057829003601f168201915b5050505050905090565b60006103c2826107a4565b6103f8576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000908152600860205260409020546001600160a01b031690565b600061041f82610533565b9050806001600160a01b0316836001600160a01b0316141561046d576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336001600160a01b038216148015906104aa57506001600160a01b038116600090815260096020908152604080832033845290915290205460ff16155b156104e1576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104ec8383836107ed565b505050565b600060035460015461050261271190565b600054030103905090565b6104ec838383610861565b6104ec8383836040518060200160405280600081525061068f565b60008061053f83610bcb565b50519392505050565b60006001600160a01b03821661058a576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001600160a01b031660009081526007602052604090205467ffffffffffffffff1690565b60606005805461033490611606565b6001600160a01b038216331415610602576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360008181526009602090815260408083206001600160a01b03871680855292529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31906106839085906114ef565b60405180910390a35050565b61069a848484610861565b6001600160a01b0383163b151580156106bc57506106ba84848484610e28565b155b156106f3576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b6060610704826107a4565b61073a576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061075160408051602081019091526000815290565b9050805160001415610772576040518060200160405280600081525061079d565b8061077c84610f6b565b60405160200161078d929190611487565b6040516020818303038152906040525b9392505050565b600081612711111580156107b9575060005482105b806107c857506107c8826110b9565b801561031f575050600090815260066020526040902054600160e01b900460ff161590565b60008281526008602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60008061086d83610bcb565b91509150846001600160a01b031682600001516001600160a01b0316146108c0576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000336001600160a01b03871614806108fc57506001600160a01b038616600090815260096020908152604080832033845290915290205460ff165b8061091757503361090c856103b7565b6001600160a01b0316145b905080610950576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038516610990576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61099c600085886107ed565b60008481526006602090815260408083206001600160a01b03808b1685526007909352818420805460001967ffffffffffffffff8083169190910181167fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000092831617909255938a168086529290942080548086166001018616941693909317909255815442909316600160a01b026001600160e01b031990931617919091178155606084015185610a4b600190565b11158015610a5a575061271186105b15610a8d57600182810155610a6f848761158f565b610a7a906001611563565b6000858152600660205260409020600101555b6000610a9a876001611563565b60008181526006602052604090208054919250906001600160a01b0316610b7e578761271111158015610ace575060005488105b15610b09578054602088015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038c1617178155610b7e565b876001610b168589611563565b610b20919061158f565b1115610b7e578054602088015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038c1617178155876001610b648589611563565b610b6e919061158f565b610b78919061158f565b60018201555b87896001600160a01b03168b6001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050505050505050565b6040805160808101825260008082526020820181905291810182905260608101919091526000828152600660209081526040808320815160808101835281546001600160a01b0381168252600160a01b810467ffffffffffffffff1694820194909452600160e01b90930460ff161515918301829052600101546060830152849190610df65780516001600160a01b031615610c68579492505050565b8161271111158015610c7b575060005482105b15610cf6575b5060001901600081815260066020908152604091829020825160808101845281546001600160a01b038116808352600160a01b820467ffffffffffffffff1694830194909452600160e01b900460ff1615159381019390935260010154606083015215610cf15794909350915050565b610c81565b81600111158015610d08575061271182105b15610df6576002546001908610610d3457600254610d26908761158f565b610d31906001611563565b90505b808310158015610d45575060018310155b15610df457600083815260066020908152604091829020825160808101845281546001600160a01b038116808352600160a01b820467ffffffffffffffff1694830194909452600160e01b900460ff1615159381019390935260010154606083015290925015801590610dd35750856001836060015185610dc69190611563565b610dd0919061158f565b10155b15610de2575094909350915050565b82610dec816115ef565b935050610d34565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f150b7a020000000000000000000000000000000000000000000000000000000081526000906001600160a01b0385169063150b7a0290610e769033908990889088906004016114ab565b602060405180830381600087803b158015610e9057600080fd5b505af1925050508015610ec0575060408051601f3d908101601f19168201909252610ebd918101906113dc565b60015b610f34573d808015610eee576040519150601f19603f3d011682016040523d82523d6000602084013e610ef3565b606091505b508051610f2c576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b6001600160e01b0319167f150b7a02000000000000000000000000000000000000000000000000000000001490505b949350505050565b606081610fab57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610fd55780610fbf81611660565b9150610fce9050600a8361157b565b9150610faf565b60008167ffffffffffffffff811115610ffe57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611028576020820181803683370190505b5090505b8415610f635761103d60018361158f565b915061104a600a8661167b565b611055906030611563565b60f81b81838151811061107857634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506110b2600a8661157b565b945061102c565b600081806001111580156110ce575061271181105b156111af5760025460019084106110fa576002546110ec908561158f565b6110f7906001611563565b90505b80821015801561110b575060018210155b156111ad57600082815260066020908152604091829020825160808101845281546001600160a01b038116808352600160a01b820467ffffffffffffffff1694830194909452600160e01b900460ff161515938101939093526001015460608301521561119a578460018260600151856111859190611563565b61118f919061158f565b101595945050505050565b50816111a5816115ef565b9250506110fa565b505b50600092915050565b60006111cb6111c684611538565b61151c565b9050828152602081018484840111156111e357600080fd5b6111ee8482856115b7565b509392505050565b803561031f816116e7565b803561031f816116fe565b803561031f81611706565b805161031f81611706565b600082601f830112611232578081fd5b8135610f638482602086016111b8565b803561031f81611716565b60006020828403121561125e578081fd5b61079d838284016111f6565b6000806040838503121561127c578081fd5b611288848285016111f6565b91506020611298858286016111f6565b9150509250929050565b6000806000606084860312156112b6578081fd5b6112c2858286016111f6565b925060206112d2868287016111f6565b92505060406112e386828701611242565b9150509250925092565b60008060008060808587031215611302578081fd5b61130e868287016111f6565b9350602061131e878288016111f6565b935050604061132f87828801611242565b925050606085013567ffffffffffffffff81111561134b578182fd5b61135787828801611222565b91505092959194509250565b60008060408385031215611375578182fd5b611381848385016111f6565b9150602061129885828601611201565b600080604083850312156113a3578182fd5b6113af848385016111f6565b9150602061129885828601611242565b6000602082840312156113d0578081fd5b61079d8382840161120c565b6000602082840312156113ed578081fd5b61079d83828401611217565b60006020828403121561140a578081fd5b61079d83828401611242565b61141f816115a6565b82525050565b80151561141f565b6000611437825190565b80845260208401935061144e8185602086016115c3565b601f01601f19169290920192915050565b6000611469825190565b6114778185602086016115c3565b9290920192915050565b8061141f565b611491818461145f565b905061079d818361145f565b6020810161031f8284611416565b608081016114b98287611416565b6114c66020830186611416565b6114d36040830185611481565b81810360608301526114e5818461142d565b9695505050505050565b6020810161031f8284611425565b6020808252810161079d818461142d565b6020810161031f8284611481565b600061152760405190565b90506115338282611633565b919050565b600067ffffffffffffffff821115611552576115526116d1565b601f19601f83011660200192915050565b600082198211156115765761157661168f565b500190565b60008261158a5761158a6116a5565b500490565b6000828210156115a1576115a161168f565b500390565b60006001600160a01b03821661031f565b82818337506000910152565b60005b838110156115de5781810151838201526020016115c6565b838111156106f35750506000910152565b6000816115fe576115fe61168f565b506000190190565b60028104600182168061161a57607f821691505b6020821081141561162d5761162d6116bb565b50919050565b601f19601f830116810181811067ffffffffffffffff82111715611659576116596116d1565b6040525050565b60006000198214156116745761167461168f565b5060010190565b60008261168a5761168a6116a5565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6116f0816115a6565b81146116fb57600080fd5b50565b8015156116f0565b6001600160e01b031981166116f0565b806116f056fea264697066735822122070d3396144468c7ebfed6f3da528e6bb9067eb7ded9c16f2639f8cbf99e0388264736f6c63430008040033";

export class ERC721AClaimable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721AClaimable> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ERC721AClaimable>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): ERC721AClaimable {
    return super.attach(address) as ERC721AClaimable;
  }
  connect(signer: Signer): ERC721AClaimable__factory {
    return super.connect(signer) as ERC721AClaimable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AClaimableInterface {
    return new utils.Interface(_abi) as ERC721AClaimableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AClaimable {
    return new Contract(address, _abi, signerOrProvider) as ERC721AClaimable;
  }
}
